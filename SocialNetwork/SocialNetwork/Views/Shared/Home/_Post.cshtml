@model Post

@{
	TimeSpan timeSpanSincePosted = DateTime.UtcNow.Subtract(Model.DateCreated);

	string displayTime = timeSpanSincePosted switch
	{
		var t when t.TotalDays >= 1 => $"{(int)t.TotalDays}d ago",
		var t when t.TotalHours >= 1 => $"{(int)t.TotalHours}h ago",
		var t when t.TotalMinutes >= 1 => $"{(int)t.TotalMinutes}m ago",
		_ => "Just now"
	};
	bool isFavorited = Model.Favorites.Any(n => n.UserId == 1);
	bool isPrivate = Model.IsPrivate == true && Model.UserId == 1;
	bool isReported = Model.Reports.Any(n => n.UserId == 1);
	bool isLiked = Model.Likes.Any(n => n.UserId == 1);
}

<div id="post-@Model.Id" class="card mb-3">
	<div class="card-body">
		<!-- post header -->
		<div>
			<div class="d-flex justify-content-between align-items-center">
				<div class="d-flex align-items-center">
					<img src="@(Model.User.ProfilePictureUrl ?? "images/user.png")" class="me-2" width="40" height="40">
					<div>
						<strong>@Model.User.FullName</strong> <br>
						<small class="text-muted">@@@Model.User.UserHandle</small>
					</div>
				</div>
				<div class="dropdown">
					<button class="btn btn-light btn-sm" data-bs-toggle="dropdown" aria-expanded="false">
						<ion-icon name="ellipsis-horizontal"></ion-icon>
					</button>
					<ul class="dropdown-menu dropdown-menu-end">
						@if (Model.UserId == 1)
						{
						<li>
								<form asp-controller="Home" asp-action="PostDelete">
									<input  type="hidden" name="postId" id="deletePostId" value="@Model.Id" />
									<button type="submit">Delete</button>
									<button type="button">Cancel</button>
								</form>
							
						</li>
						<li> 
							<form asp-controller="Home" asp-action="TogglePostVisibility">
								<input type="hidden" name="postId" value="@Model.Id" />
								<button type="submit">
                                    Set as @(isPrivate ? "public" : "private")
                                </button>
							</form>
						
						</li>
						}

						
						<li>
							@if (!isReported)
							{
								<form asp-controller="Home" asp-action="AddPostReport">
									<input type="hidden" name="postId" value="@Model.Id" />
									<button type="submit">
										Report
									</button>
								</form>
							}
						</li>
					</ul>
				</div>

			</div>
			<small class="text-muted" title="@displayTime">@Model.DateCreated.ToString("HH:mm  MM/dd/yyyy")</small>
		</div>

		<!-- post text -->
		<p class="mt-2">
			@Model.Content
		</p>

		<!-- image placeholder -->                                                                        <!-- onerror="this.style.display='none' ;" -->
		@if (!string.IsNullOrEmpty(Model.ImageUrl))
		{
			<div class="text-center">
				<img id="postImage" src="@Model.ImageUrl" class="img-fluid border" alt="Post Image" onerror="this.src='images/placeholder.jpg';" style="max-height: 500px; object-fit: cover; border-radius: 0;" />
			</div>
		}

		<!-- post footer -->
		<div class="d-flex mt-2">
			<div>
				<div class="d-flex">
					<form asp-controller="Home" asp-action="TogglePostLike">
						<input type="hidden" name="postId" value="@Model.Id" />
						@Html.AntiForgeryToken()
						<button type="submit" class="btn btn-light like-button">
							<ion-icon style="font-size: 18px;" name="@(isLiked ? "thumbs-up" : "thumbs-up-outline")"> </ion-icon>  <!-- ion-icon name="thumbs-up-sharp" style="font-size: 20px; color: @@(Model.Likes.Any(n => n.UserId == 1) ? "#1E90FF" : "#D3D3D3");" -->
						</button>
					</form>
					<span class="ms-2">@Model.Likes.Count</span>

					@*
					<button class="btn btn-light btn-sm">
						<ion-icon style="font-size: 18px;" name="thumbs-down-outline"></ion-icon>
					</button>
					<span>0</span>
					*@

					<button class="btn btn-light ms-2">
						<ion-icon style="font-size: 18px;" name="chatbox-outline"></ion-icon>
					</button>
					<span class="ms-2" href="#">@Model.Comments.Count</span>
				</div>
			</div>
			<div class="d-flex align-items-center ms-auto">
				<div class="me-2">
					<form asp-controller="Home" asp-action="TogglePostFavorite">
						<input type="hidden" name="postId" value="@Model.Id" />
						@Html.AntiForgeryToken()
						<button type="submit" class="btn btn-light favorite-button">
							<ion-icon name="@(isFavorited?"bookmark":"bookmark-outline")"> </ion-icon>
						</button>
						@if (Model.Favorites.Count != 0)
						{
							<span class="ms-2">@Model.Favorites.Count</span>
						}
					</form>
				</div>
				
				<button class="btn btn-light me-2">
					<ion-icon name="resize-outline"></ion-icon>
				</button>
			</div>
		</div>


		<!-- comment-section -->
		<div class="mt-3">
			<div class="p-3 border-top border-light">

				@foreach (var comment in Model.Comments.OrderByDescending(n => n.DateCreated).Take(3))
				{
					TimeSpan commentTimeSpanSincePosted = DateTime.UtcNow.Subtract(comment.DateCreated);

					string commentDisplayTime = commentTimeSpanSincePosted switch
					{
						var t when t.TotalDays >= 1 => $"{(int)t.TotalDays}d ago",
						var t when t.TotalHours >= 1 => $"{(int)t.TotalHours}h ago",
						var t when t.TotalMinutes >= 1 => $"{(int)t.TotalMinutes}m ago",
						_ => "Just now"
					};

					<div class="d-flex mb-3">
						<a>
							<img src="@(comment.User.ProfilePictureUrl ?? "images/user.png")" class="mt-1" style="width: 32px; height: 32px;" />
						</a>
						<div class="flex-grow-1 ms-2">
							<div class="d-flex justify-content-between">
								<a class="fw-semibold text-dark text-decoration-none">@comment.User.FullName</a>
								<small class="text-muted">@commentDisplayTime</small>
							</div>
							<div class="d-flex justify-content-between mt-1">
								<p class="mb-1">@comment.Content</p>
								<form asp-controller="Home" asp-action="RemovePostComment" class="remove-comment-form">
                                    @Html.AntiForgeryToken()
									<input type="hidden" name="commentId" value="@comment.Id" />
									<input type="hidden" name="postId" value="@comment.PostId" />
									<button type="submit" class="btn btn-link text-danger btn-sm p-0" title="Remove comment">
										<ion-icon name="trash-outline"></ion-icon>
									</button>
								</form>
							</div>
						</div>
					</div>
				}

				@if (Model.Comments.Count >= 3)
				{
					<div class="px-2">
						<a href="#" class="text-decoration-none">Show all comments</a>
					</div>
				}
			</div>

			<form asp-controller="Home" asp-action="AddPostComment" class="add-comment-form">
				@Html.AntiForgeryToken()
				<div class="d-flex align-items-start border-top border-light px-3 py-3">
					<img src="~/images/user.png" class="rounded-circle me-2" style="width: 32px; height: 32px;" />

					<div class="flex-grow-1">
						<input type="hidden" name="postId" value="@Model.Id" />
						<textarea name="content" class="form-control mb-2" rows="1" placeholder="..."></textarea>
						<div class="text-end">
							<button type="submit" class="btn btn-primary btn-sm">Post Comment</button>
						</div>
					</div>
				</div>
			</form>
		</div>
	</div>
</div>
@* <partial name="Home/_PostDeleteConfirmation"/>  *@
@* <script>  *@
@*     function showDeletePostDialog(postId) {         *@
@* 		console.log("Post ID: " + postId); *@
@* 		document.getElementById("deletePostId").value = postId; *@
@* 		UIkit.modal(document.getElementById('postDeleteDialog')).show();  *@
@*     } *@
@*  </script> *@